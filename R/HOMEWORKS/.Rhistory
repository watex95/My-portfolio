smp_size <- floor(0.80 * nrow(breast_cancer))
train_ind <- sample(seq_len(nrow(breast_cancer)), size = smp_size)
train.cancer <- breast_cancer[train_ind, ]
test.cancer <- breast_cancer[-train_ind, ]
# Fit the model on the training set
set.seed(123)
model_tree <- train(classes ~ ., data = train.cancer, method = "rpart",
trControl = trainControl("cv", number = 5),
tuneLength = 3
)
library(tidyverse)
library(rpart)
library(dplyr)
# First split the dataset
set.seed(123)
## 80% of the sample size
smp_size <- floor(0.80 * nrow(breast_cancer))
train_ind <- sample(seq_len(nrow(breast_cancer)), size = smp_size)
train.cancer <- breast_cancer[train_ind, ]
test.cancer <- breast_cancer[-train_ind, ]
# Fit the model on the training set
set.seed(123)
model_tree <- train(classes ~ ., data = train.cancer, method = "rpart",                    trControl = trainControl("cv", number = 5),tuneLength = 3)
model_tree <- train(classes ~., data = train.cancer, method = "rpart",
trControl = trainControl("cv", number = 5),
tuneLength = 3
)
sum(is.na(breast_cancer))
suppressWarnings(library(tidyverse))
suppressWarnings(library(caret))
suppressWarnings(library(rpart.plot))
suppressWarnings(library(randomForest))
suppressWarnings(library(e1071))
suppressWarnings(library(ROCR))
suppressWarnings(library(pROC))
suppressWarnings(library(RCurl))
suppressWarnings(library(gbm))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
# How many missing values
sum(is.na(breast_cancer))
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
# Mean
#check for number of missing values before imputation
sum(is.na(breast_cancer$clump_thickness))
breast_cancer$clump_thickness[is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
#check for number of missing values after imputation
sum(is.na(breast_cancer$clump_thickness))
# knn
#check again for number of missing values before imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable ='uniformity_of_cell_size',
k=3, imp_var=FALSE)
#check again for number of missing values after imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$uniformity_of_cell_shape)
colnames(breast_cancer) #check to see if it was created
#Fit a simple linear between third column and the mentioned columns
attach(breast_cancer)
mymodel=lm(breast_cancer$uniformity_of_cell_shape~marginal_adhesion+normal_nucleoli,data=breast_cancer)
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$uniformity_of_cell_shape[i]=mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[3]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values after imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
# Impute missing values of the barenuclei column before modelling
#check for number of missing values before imputation
sum(is.na(breast_cancer$bare_nuclei))
breast_cancer$bare_nuclei[is.na(breast_cancer$bare_nuclei)]= round(mean(breast_cancer$bare_nuclei, na.rm=TRUE),digits = 0)
#check for number of missing values after imputation
sum(is.na(breast_cancer$bare_nuclei))
library(tidyverse)
library(rpart)
library(dplyr)
breast_cancer
# First split the dataset
set.seed(123)
## 80% of the sample size
smp_size <- floor(0.80 * nrow(breast_cancer))
train_ind <- sample(seq_len(nrow(breast_cancer)), size = smp_size)
train.cancer <- breast_cancer[train_ind, ]
test.cancer <- breast_cancer[-train_ind, ]
sum(is.na(breast_cancer))
# Fit the model on the training set
set.seed(123)
model_tree <- train(classes ~., data = train.cancer, method = "rpart",
trControl = trainControl("cv", number = 5),
tuneLength = 3
)
# Fit the model on the training set
model_tree <- train(classes ~ ., data = train.cancer, method = "rpart",                    trControl = trainControl("cv", number = 5),tuneLength = 3)
model_tree
#visulize the decision tree
prp(model_tree$finalModel, box.palette = "Reds", tweak = 1.2)
library(tidyverse)
library(rpart)
library(dplyr)
# First split the dataset
set.seed(123)
## 80% of the sample size
smp_size <- floor(0.80 * nrow(breast_cancer))
train_ind <- sample(seq_len(nrow(breast_cancer)), size = smp_size)
train.cancer <- breast_cancer[train_ind, ]
test.cancer <- breast_cancer[-train_ind, ]
# Fit the model on the training set
model_tree <- train(classes ~ ., data = train.cancer, method = "rpart",                    trControl = trainControl("cv", number = 5),tuneLength = 3)
model_tree
#visulize the decision tree
prp(model_tree$finalModel, box.palette = "Reds", tweak = 1.2)
sum(is.na(breast_cancer))
sum(is.na(breast_cancer))
suppressWarnings(library(tidyverse))
suppressWarnings(library(caret))
suppressWarnings(library(rpart.plot))
suppressWarnings(library(randomForest))
suppressWarnings(library(e1071))
suppressWarnings(library(ROCR))
suppressWarnings(library(pROC))
suppressWarnings(library(RCurl))
suppressWarnings(library(gbm))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
sum(is.na(breast_cancer)) #no missing values
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
breast_cancer[,1][is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
sum(is.na(breast_cancer$clump_thickness)) #check again for number of missing values
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable = 'uniformity_of_cell_size',
k=3, imp_var=FALSE)
sum(is.na(breast_cancer$uniformity_of_cell_size)) #check for missing values
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable = 'uniformity_of_cell_size',
k=3, imp_var=FALSE)
sum(is.na(breast_cancer$uniformity_of_cell_size)) #check for missing values
#Check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$uniformity_of_cell_shape)
#Fit a simple linear between third column and the mentioned columns
attach(breast_cancer)
lm(breast_cancer$uniformity_of_cell_shape~uniformity_of_cell_shape+marginal_adhesion+normal_nucleoli,data=breast_cancer)
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$uniformity_of_cell_shape[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[3]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values
sum(is.na(breast_cancer[,3]))
suppressWarnings(library(tidyverse))
)
suppressWarnings(library(caret))
suppressWarnings(library(rpart.plot))
suppressWarnings(library(randomForest))
suppressWarnings(library(e1071))
suppressWarnings(library(ROCR))
suppressWarnings(library(pROC))
suppressWarnings(library(RCurl))
suppressWarnings(library(gbm))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
# How many missing values
sum(is.na(breast_cancer))
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
# Mean
#check for number of missing values before imputation
sum(is.na(breast_cancer$clump_thickness))
breast_cancer$clump_thickness[is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
#check for number of missing values after imputation
sum(is.na(breast_cancer$clump_thickness))
# knn
#check again for number of missing values before imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable ='uniformity_of_cell_size',
k=3, imp_var=FALSE)
#check again for number of missing values after imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
# How many missing values
sum(is.na(breast_cancer))
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
# Mean
#check for number of missing values before imputation
sum(is.na(breast_cancer$clump_thickness))
breast_cancer$clump_thickness[is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
#check for number of missing values after imputation
sum(is.na(breast_cancer$clump_thickness))
# knn
#check again for number of missing values before imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable ='uniformity_of_cell_size',
k=3, imp_var=FALSE)
#check again for number of missing values after imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$uniformity_of_cell_shape)
colnames(breast_cancer) #check to see if it was created
#Fit a simple linear between third column and the mentioned columns
attach(breast_cancer)
mymodel=lm(breast_cancer$uniformity_of_cell_shape~marginal_adhesion+normal_nucleoli,data=breast_cancer)
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$uniformity_of_cell_shape[i]=mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[3]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values after imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
# Fit the model on the training set
model_tree <- train(classes ~ .,data=train.cancer, method = "rpart",           trControl = trainControl("cv", number = 5),tuneLength = 3)
library(tidyverse)
library(rpart)
library(dplyr)
# First split the dataset
set.seed(123)
## 80% of the sample size
smp_size <- floor(0.80 * nrow(breast_cancer))
train_ind <- sample(seq_len(nrow(breast_cancer)), size = smp_size)
train.cancer <- breast_cancer[train_ind, ]
test.cancer <- breast_cancer[-train_ind, ]
dim(train.cancer)
dim(test.cancer)
# Fit the model on the training set
model_tree <- train(classes ~ .,data=train.cancer, method = "rpart",           trControl = trainControl("cv", number = 5),tuneLength = 3)
# Fit the model on the training set
model_tree <- train(train.cancer$classes ~ .,data=train.cancer, method = "rpart",           trControl = trainControl("cv", number = 5),tuneLength = 3)
# Fit the model on the training set
model_tree <- train(classes~.,data=train.cancer, method = "rpart",           trControl = trainControl("cv", number = 5),tuneLength = 3)
sum(is.na(train.cancer))
suppressWarnings(library(tidyverse))
suppressWarnings(library(caret))
suppressWarnings(library(rpart.plot))
suppressWarnings(library(randomForest))
suppressWarnings(library(e1071))
suppressWarnings(library(ROCR))
suppressWarnings(library(pROC))
suppressWarnings(library(RCurl))
suppressWarnings(library(gbm))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
sum(is.na(breast_cancer)) #no missing values
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
breast_cancer[,1][is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
sum(is.na(breast_cancer$clump_thickness)) #check again for number of missing values
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable = 'uniformity_of_cell_size',
k=3, imp_var=FALSE)
sum(is.na(breast_cancer$uniformity_of_cell_size)) #check for missing values
breast_cancer$clump_thickness[is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
sum(is.na(breast_cancer$clump_thickness)) #check again for number of missing values
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable = 'uniformity_of_cell_size',
k=3, imp_var=FALSE)
sum(is.na(breast_cancer$uniformity_of_cell_size)) #check for missing values
#Check for the number of missing values before imputing
sum(is.na(breast_cancer$bare_nuclei))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$bare_nuclei)
#Fit a simple linear between third column and the mentioned columns
mymodel <- lm(bare_nuclei ~ uniformity_of_cell_shape + marginal_adhesion + normal_nucleoli, data = breast_cancer)
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values
sum(is.na(breast_cancer$bare_nuclei))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
# How many missing values
sum(is.na(breast_cancer))
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
# Mean
#check for number of missing values before imputation
sum(is.na(breast_cancer$clump_thickness))
breast_cancer$clump_thickness[is.na(breast_cancer$clump_thickness)]= round(mean(breast_cancer$clump_thickness, na.rm=TRUE),digits = 0)
#check for number of missing values after imputation
sum(is.na(breast_cancer$clump_thickness))
# knn
#check again for number of missing values before imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
library(VIM)
breast_cancer<-kNN(data = breast_cancer, variable ='uniformity_of_cell_size',
k=3, imp_var=FALSE)
#check again for number of missing values after imputation
sum(is.na(breast_cancer$uniformity_of_cell_size))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$uniformity_of_cell_shape))
#check for the number of missing values before imputing
sum(is.na(breast_cancer$bare_nuclei))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$bare_nuclei)
table(breast_cancer$I) #analyze the indicator
#Fit a simple linear between third column and the mentioned columns
attach(breast_cancer)
mymodel=lm(bare_nuclei ~ uniformity_of_cell_shape + marginal_adhesion
+ normal_nucleoli,data=breast_cancer)
mymodel
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
# Impute missing values of the barenuclei column before modelling
#check for number of missing values before imputation
sum(is.na(breast_cancer$bare_nuclei))
# Impute missing values of the barenuclei column before modelling
#check for number of missing values before imputation
sum(is.na(breast_cancer$bare_nuclei))
mymodel=lm(bare_nuclei ~ uniformity_of_cell_shape + marginal_adhesion
+ normal_nucleoli,data=breast_cancer)
mymodel
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values after imputing
sum(is.na(breast_cancer$bare_nuclei))
for(i in 1:nrow(breast_cancer$bare_nuclei))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
warnings()
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
else {
breast_cancer$bare_nuclei[i]=breast_cancer$bare_nuclei[i]
}
}
#check for the number of missing values after imputing
sum(is.na(breast_cancer$bare_nuclei))
warnings()
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
while(breast_cancer$I==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
warnings()
#Impute missing value with the model output in a for loop
for(i in 1:nrow(breast_cancer))
{
if(breast_cancer$I[I]==0)
{
breast_cancer$bare_nuclei[i] = mymodel$coefficients[1]+
mymodel$coefficients[2]*breast_cancer$uniformity_of_cell_shape[i]+
mymodel$coefficients[3]*breast_cancer$marginal_adhesion[i]+
mymodel$coefficients[4]*breast_cancer$normal_nucleoli[i]
}
}
#check for the number of missing values after imputing
sum(is.na(breast_cancer$bare_nuclei))
breast_cancer <- regressionImp(bare_nuclei ~ uniformity_of_cell_shape +
marginal_adhesion+normal_nucleoli, data = breast_cancer,
imp_var = TRUE)
library(mice)
library(mice)
install.packages("mice")
breast_cancer<-kNN(data = breast_cancer, variable = 'bare_nuclei',
k=3, imp_var=FALSE)
sum(is.na(breast_cancer$bare_nuclei)) #check for missing values
suppressWarnings(library(tidyverse))
suppressWarnings(library(caret))
suppressWarnings(library(rpart.plot))
suppressWarnings(library(randomForest))
suppressWarnings(library(e1071))
suppressWarnings(library(ROCR))
suppressWarnings(library(pROC))
suppressWarnings(library(RCurl))
suppressWarnings(library(gbm))
breast_cancer<-read.csv('WisconsinBreastCancerwithmissing.csv',header = T)
str(breast_cancer) #check the variables
dim(breast_cancer) #check the size of dataframe
sum(is.na(breast_cancer)) #no missing values
#In which columns are they missing?
colnames(breast_cancer)[colSums(is.na(breast_cancer)) > 0]
#Check for the number of missing values before imputing
sum(is.na(breast_cancer$bare_nuclei))
#Start by creating an indicator variable
Ind<-function(t)
{
x=dim(length(t))
x[which(!is.na(t))]=1
x[which(is.na(t))]=0
return(x)
}
breast_cancer$I<-Ind(breast_cancer$bare_nuclei)
#Fit a simple linear between third column and the mentioned columns
mymodel <- lm(uniformity_of_cell_shape + marginal_adhesion + normal_nucleoli, data = breast_cancer)
breast_cancer<-select(breast_cancer,-c(I))
